h1. Moustache

<pre>
  (app ["hi"] {:get "Hello World!"})
</pre>

Moustache is a micro web framework/internal DSL to wire Ring handlers and middlewares.

h2. How micro is it?

Well there's only one macro you need to know: @app@. 

Every other public var is public only because @app@ needs it in its expansion.

h2. The @app@ macro

A @(app ...)@ form returns a Ring application (handler).

There's currently four usages of @app@:
* to wrap a Ring handler,
* to define routes,
* to dispatch on HTTP methods
* and to render plain text.

h3. Wrapping an existing Ring handler

<pre>
  (app my-handler) ; identity, returns my-handler
</pre> 

You can simply wrap an handler into middlewares:
<pre>
  (app
    middleware1
    (middleware2 arg)
    my-handler)
  ; equivalent to (-> my-handler (middleware2 arg) middleware1)
  ; ie (middleware1 (middleware2 my-handler arg))
</pre> 

Note that *every usage of @app@ supports middleware-wrapping*.

h3. Routes

h4. Basics
With Moustache you don't write routes as encoded uri (eg @"/happy%20birthday/Mr%20President"@), you write vectors of decoded segments (eg @["happy birthday" "Mr President"]@).

<pre>
  (app ["foo"] my-handler) ; will route requests to "/foo" to my-handler
  (app ["foo" ""] my-handler) ; will route requests to "/foo/" to my-handler
  (app ["foo" "bar"] my-handler) ; will route requests to "/foo/bar" to my-handler
  (app ["foo" &] my-handler) ; will route requests to "/foo", "/foo/", "/foo/bar" and "/foo/bar/baz/" to my-handler (and will chop "/foo" off from the uri)
  (app ["foo" name] my-handler) ; will route requests to "/foo/", "/foo/bar" to my-handler and bind @name@ (a local) to the matched segment (eg "" or "bar")
  (app ["foo" x & xs] my-handler) ; "/foo/bar/baz/bloom" will bind x to bar and xs to ["baz" "bloom"]
</pre>

h4. Route validation/destructuring
<pre>
  (defn parse-int [s]; returns nil if s does not represent an integer
    (try 
      (Integer/parseInt s)
      (catch Exception e)))

  (app ["order" [id parse-int]] my-handler) ; for "/order/134" @id@ will be bind to 134 (not "134"), this route will not match "/order/abc".
  
  (app ["agenda" [[_ year month day] #"(\d{4})-(\d{2})-(\d{2})"]] 
    {:get [month "-" day "-" year " agenda"]})
</pre>